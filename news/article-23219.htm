<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://clash-nyanpasu.github.io/news/article-23219.htm" />
    <title>尚硅谷的数据结构中JAVA将数组转为稀疏数组，并将该稀疏数组写到文件中，最后再读取文件恢复成原来最开始的数组</title>
        <meta name="description" content="尚硅谷的数据结构中JAVA将数组转为稀疏数组，并将该稀疏数组写到文件中，最后再读取文件恢复成原来最开始的数组    运行结果图，最终文件会生成在你创建项目文件里     1.如果二维数组中有许多重复的" />
        <link rel="icon" href="__ADDON__/img/clash_nyanpasu/favicon.ico" type="image/x-icon"/>
    <meta charset="utf-8">
    <meta name="format-detection" content="telephone=no">
    <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0,  user-scalable=0">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <!-- Favicon Icon -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nyanpasu/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nyanpasu/venobox.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nyanpasu/plugin_theme_css.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nyanpasu/style.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/clash_nyanpasu/responsive.css">
    <!-- modernizr js -->
    <script src="/assets/website/js/frontend/clash_nyanpasu/modernizr-2.8.3.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-PY15Z3XB3H"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-PY15Z3XB3H');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="em40_header_area_main">
        <div class="tx_top2_relative">
            <div class="all_header_abs">
                <div class="techsold-main-menu one_page menu4 heading_style_4 witr_h_h6">
                    <div class="techsold_nav_area transprent-menu scroll_fixed bdbar">
                        <div class="container">
                            <div class="row logo-left">
                                <div class="col-xl-3 col-lg-3 col-md-2 col-sm-12">
                                    <div class="logo">
                                                                                <a href="/">
                                            Clash Nyanpasu
                                        </a>
                                                                            </div>
                                </div>
                                <div class="col-xl-9 col-lg-9 col-md-10 col-sm-12">
                                    <nav class="techsold_menu">
                                        <ul class="sub-menu">
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                        <li><a href="#">关于</a></li>
                                            <li><a href="#">联系</a></li>
                                        </ul>
                                    </nav>
                                    <!-- MAIN MENU -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- mobile menu -->
    <div class="mobile_logo_area">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="mobilemenu_con">
                        <div class="mobile_menu_logo text-center">
                                                        <a href="/">
                                Clash Nyanpasu
                            </a>
                                                    </div>
                        <div class="mobile_menu_option">
                            <div class="mobile_menu_o mobile_opicon">
                                <i class="icofont-navigation-menu openclass"></i>
                            </div>
                            <div class="mobile_menu_inner mobile_p">
                                <div class="mobile_menu_content">
                                    <div class="mobile_menu_logo text-center">
                                                                                <a href="/">
                                            Clash Nyanpasu
                                        </a>
                                                                            </div>
                                    <div class="menu_area mobile-menu">
                                        <nav class="techsold_menu">
                                            <ul class="sub-menu">
                                                                                                <li><a href="/">首页</a></li>
                                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                                <li><a href="#">关于</a></li>
                                                <li><a href="#">联系</a></li>
                                            </ul>
                                        </nav>
                                    </div>
                                    <div class="mobile_menu_o mobile_cicon">
                                        <i class="icofont-close closeclass"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="mobile_overlay"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Mobile Menu -->
    <!-- breadcumb area -->
    <div class="breadcumb-area">
        <div class="container">
            <div class="row">
                <div class="col-md-12 txtc  text-center ccase">
                    <div class="brpt brptsize">
                        <h1 class="brcrumb_title">尚硅谷的数据结构中JAVA将数组转为稀疏数组，并将该稀疏数组写到文件中，最后再读取文件恢复成原来最开始的数组</h1>
                    </div>
                    <div class="breadcumb-inner">
                        <ul>
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>-<span class="current">正文</span></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End breadcumb area -->
    <!-- about area -->
    <div class="ts_about_area">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>尚硅谷的数据结构中JAVA将数组转为稀疏数组，并将该稀疏数组写到文件中，最后再读取文件恢复成原来最开始的数组</h3> <ul> <li> <ul> <li><a href="#_158" rel="nofollow">运行结果图，最终文件会生成在你创建项目文件里</a></li> </ul> </li> </ul> </div> <p>1.如果二维数组中有许多重复的元素，则保存数组是很废空间资源的。可以使用数组的稀疏数组来减小数组的大小。</p> <p>上述二维数组的稀疏数组如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230223/2ca36a4421b2de4c9b6883e62d2f644b.jpg" alt="尚硅谷的数据结构中JAVA将数组转为稀疏数组，并将该稀疏数组写到文件中，最后再读取文件恢复成原来最开始的数组"></p> <p>图中给出了这个稀缺数组第一行中每个元素的具体含义。</p> <p>至于第二行和第三行中元素的含义，我只以第二行为例</p> <p>第二行中的第三个元素：表示原始数组中的元素“1”</p> <p>第二行中的第一个元素：元素“1”的行号索引，从0开始</p> <p>第二行中的第二个元素：元素“1”的列号索引，从0开始</p> <p>下面是完整的代码，数组转换部分是指教程视频，IO部分是教程视频中给出的作业。</p> <pre><code class="prism language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>sparsearray</span><span class="token punctuation">;</span>  <span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileReader</span><span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SparseArray</span>  <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> 	<span class="token punctuation">{<!-- --></span> 		<span class="token comment">//定义原始的数组</span> 		<span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chessArray<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//元素的默认值是0</span> 		chessArray<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//黑色的棋子</span> 		chessArray<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>	<span class="token comment">//蓝色的棋子</span> 		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> is <span class="token operator">:</span> chessArray<span class="token punctuation">)</span> 		<span class="token punctuation">{<!-- --></span> 			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">:</span> is<span class="token punctuation">)</span>  			<span class="token punctuation">{<!-- --></span> 				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token punctuation">}</span> 		 		<span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//总共有多少个不同的值</span> 		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chessArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment">//chessArray.length其实是二维数组的行数</span> 		<span class="token punctuation">{<!-- --></span> 			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> chessArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment">//遍历一行，也就是一维数组，这里行数和列数相等，所以可以用chessArray.length</span> 			<span class="token punctuation">{<!-- --></span> 				<span class="token keyword">if</span><span class="token punctuation">(</span>chessArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> 				<span class="token punctuation">{<!-- --></span> 					sum<span class="token operator">++</span><span class="token punctuation">;</span> 				<span class="token punctuation">}</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span> 		 		<span class="token comment">//定义一个稀疏数组</span> 		<span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sparseArray<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>sum<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//稀疏数组的列数是固定的“3”</span> 		<span class="token comment">//给稀疏数组的元素赋值</span> 		sparseArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">;</span> 		sparseArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">;</span> 		sparseArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span>sum<span class="token punctuation">;</span> 		<span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> 		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  		<span class="token punctuation">{<!-- --></span> 			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>  			<span class="token punctuation">{<!-- --></span> 				<span class="token keyword">if</span><span class="token punctuation">(</span>chessArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> 				<span class="token punctuation">{<!-- --></span> 					count<span class="token operator">++</span><span class="token punctuation">;</span> 					sparseArray<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span> 					sparseArray<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>j<span class="token punctuation">;</span> 					sparseArray<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span>chessArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> 				<span class="token punctuation">}</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span> 		 		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"稀疏数组："</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">//打印被赋值之后的稀疏数组</span> 		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> is <span class="token operator">:</span> sparseArray<span class="token punctuation">)</span>  		<span class="token punctuation">{<!-- --></span> 			<span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">int</span> s2 <span class="token operator">:</span> is<span class="token punctuation">)</span>  			<span class="token punctuation">{<!-- --></span> 				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>s2<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token punctuation">}</span> 		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"把稀疏数组保存到文件中。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token class-name">FileOutputStream</span> fileOutputStream<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"chess.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		 		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sparseArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  		<span class="token punctuation">{<!-- --></span> 			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>  			<span class="token punctuation">{<!-- --></span> 				<span class="token keyword">int</span> a<span class="token operator">=</span>sparseArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> 				<span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">//如果是最后一列就不加逗号</span> 				<span class="token punctuation">{<!-- --></span> 					fileOutputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 				<span class="token punctuation">}</span> 				<span class="token keyword">else</span> <span class="token comment">//否则就加逗号</span> 				<span class="token punctuation">{<!-- --></span> 					fileOutputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 				<span class="token punctuation">}</span> 			<span class="token punctuation">}</span> 			fileOutputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token punctuation">}</span> 		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"读取文件中的稀疏数组并恢复成原来的数组:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		 		<span class="token class-name">BufferedReader</span> bufferedReader<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">"chess.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//字符缓冲流</span> 		<span class="token class-name">String</span> line<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span> 		<span class="token keyword">int</span> c<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> 		<span class="token class-name">String</span> row<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span> 		<span class="token class-name">String</span> col<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span> 		<span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chessRestore<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span> 		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>line<span class="token operator">=</span>bufferedReader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> 		<span class="token punctuation">{<!-- --></span> 			c<span class="token operator">++</span><span class="token punctuation">;</span> 			<span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//如果是稀疏矩阵的第一行</span> 			<span class="token punctuation">{<!-- --></span> 				<span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token operator">=</span>line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 				row<span class="token operator">=</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 				col<span class="token operator">=</span>array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 				chessRestore<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 			<span class="token keyword">else</span>  			<span class="token punctuation">{<!-- --></span> 				<span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token operator">=</span>line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 				<span class="token class-name">String</span> hang<span class="token operator">=</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 				<span class="token class-name">String</span> lie<span class="token operator">=</span>array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 				<span class="token class-name">String</span> val<span class="token operator">=</span>array<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 				chessRestore<span class="token punctuation">[</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>hang<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>lie<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 			 			 		<span class="token punctuation">}</span> 		 		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> is <span class="token operator">:</span> chessRestore<span class="token punctuation">)</span>  		<span class="token punctuation">{<!-- --></span> 			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> is2 <span class="token operator">:</span> is<span class="token punctuation">)</span>  			<span class="token punctuation">{<!-- --></span> 				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>is2<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token punctuation">}</span> 		 		 		 	<span class="token punctuation">}</span>  <span class="token punctuation">}</span>   </code></pre> <h2> <a id="_158" rel="nofollow"></a>运行结果图，最终文件会生成在你创建项目文件里</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230223/a564d4d01a13c3a45afe6b188710fd34.jpg" alt="尚硅谷的数据结构中JAVA将数组转为稀疏数组，并将该稀疏数组写到文件中，最后再读取文件恢复成原来最开始的数组"></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-22751.htm">动物疫苗注射工作注意事项有哪些内容（动物疫苗知识）</a></p>
                                        <p>下一个：<a href="/news/article-23221.htm">猫最忌讳的三个属相（有些人命里不能养猫）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-9-24-linux-clash-nyanpasu.htm" title="9月24日 - 最高速度19.2M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">9月24日 - 最高速度19.2M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-30-free-clash-nyanpasu.htm" title="7月30日 - 最高速度21.1M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">7月30日 - 最高速度21.1M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-26-node-share.htm" title="10月26日 - 最高速度18.9M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">10月26日 - 最高速度18.9M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-18-free-node-subscribe.htm" title="11月18日 - 最高速度22.7M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">11月18日 - 最高速度22.7M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-14-free-high-speed-nodes.htm" title="9月14日 - 最高速度18.5M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">9月14日 - 最高速度18.5M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-9-free-high-speed-nodes.htm" title="11月9日 - 最高速度19.7M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">11月9日 - 最高速度19.7M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-28-clash-nyanpasu-node.htm" title="11月28日 - 最高速度18.5M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">11月28日 - 最高速度18.5M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-4-free-subscribe-node.htm" title="11月4日 - 最高速度21.2M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">11月4日 - 最高速度21.2M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-16-clash-nyanpasu.htm" title="10月16日 - 最高速度21.1M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">10月16日 - 最高速度21.1M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-26-free-high-speed-nodes.htm" title="11月26日 - 最高速度21.5M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接">11月26日 - 最高速度21.5M/S，2024年Clash Nyanpasu每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">32</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- footer area -->
<div class="witrfm_area">
    <div class="footer-bottom">
        <div class="container">
            <div class="row">
                <div class="col-md-12 footer_style_1">
                    <div class="copy-right-text text-center">
                        <p>
                            Clash Nyanpasu官方节点站 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Include All JS -->
<script src="/assets/website/js/frontend/clash_nyanpasu/jquery-3.5.1.min.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/bootstrap.min.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/isotope.pkgd.min.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/slick.min.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/imagesloaded.pkgd.min.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/venobox.min.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/jquery.appear.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/jquery.knob.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/theme-pluginjs.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/jquery.meanmenu.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/ajax-mail.js"></script>
<script src="/assets/website/js/frontend/clash_nyanpasu/theme.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>